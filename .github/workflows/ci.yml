name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    name: Validate Configuration
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Validate Docker Compose
      run: |
        docker compose config
    
    - name: Lint Dockerfile
      uses: hadolint/hadolint-action@v3.1.0
      with:
        dockerfile: Dockerfile
        ignore: DL3008,DL3009
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install Ansible
      run: |
        pip install ansible ansible-lint
    
    - name: Validate Ansible Playbook
      run: |
        cd ansible
        ansible-playbook playbook.yml --syntax-check
    
    - name: Lint Ansible Playbook
      run: |
        cd ansible
        ansible-lint playbook.yml || true
    
    - name: Validate shell scripts
      run: |
        sudo apt-get update
        sudo apt-get install -y shellcheck
        shellcheck deploy.sh

  test-build:
    name: Test Docker Build
    runs-on: ubuntu-latest
    needs: validate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: false
        tags: raspberry-pi-print-server:test
        cache-from: type=gha
        cache-to: type=gha,mode=max

  documentation:
    name: Check Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check README links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        config-file: '.github/markdown-link-check-config.json'
      continue-on-error: true
