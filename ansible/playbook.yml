---
# Ansible playbook for deploying CUPS print server on Raspberry Pi

- name: Deploy CUPS Print Server on Raspberry Pi
  hosts: print_servers
  become: yes
  
  vars:
    docker_compose_version: "2.23.0"
    project_dir: "/opt/print-server"
    cups_admin_user: "{{ cups_admin_user | default('admin') }}"
    cups_admin_password: "{{ cups_admin_password | default('admin') }}"
  
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
      tags: [system]
    
    - name: Install required system packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - git
          - python3-pip
          - python3-setuptools
        state: present
      tags: [system]
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
      tags: [docker]
    
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=arm64] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      when: ansible_architecture == "aarch64"
      tags: [docker]
    
    - name: Add Docker repository (armhf)
      apt_repository:
        repo: "deb [arch=armhf] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
      when: ansible_architecture == "armv7l"
      tags: [docker]
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes
      tags: [docker]
    
    - name: Ensure Docker service is started and enabled
      systemd:
        name: docker
        state: started
        enabled: yes
      tags: [docker]
    
    - name: Add pi user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      tags: [docker]
    
    - name: Create project directory
      file:
        path: "{{ project_dir }}"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      tags: [deploy]
    
    - name: Copy Docker Compose file
      copy:
        src: ../docker-compose.yml
        dest: "{{ project_dir }}/docker-compose.yml"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      tags: [deploy]
    
    - name: Copy Dockerfile
      copy:
        src: ../Dockerfile
        dest: "{{ project_dir }}/Dockerfile"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      tags: [deploy]
    
    - name: Create CUPS configuration directory
      file:
        path: "{{ project_dir }}/cups"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0755'
      tags: [deploy]
    
    - name: Copy CUPS configuration files
      copy:
        src: "../cups/{{ item }}"
        dest: "{{ project_dir }}/cups/{{ item }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0644'
      loop:
        - cupsd.conf
        - cups-files.conf
        - printers.conf
      tags: [deploy]
    
    - name: Create environment file
      copy:
        content: |
          CUPS_ADMIN_USER={{ cups_admin_user }}
          CUPS_ADMIN_PASSWORD={{ cups_admin_password }}
        dest: "{{ project_dir }}/.env"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: '0600'
      tags: [deploy]
    
    - name: Pull Docker images
      docker_compose:
        project_src: "{{ project_dir }}"
        pull: yes
      environment:
        DOCKER_HOST: unix:///var/run/docker.sock
      tags: [deploy]
      ignore_errors: yes
    
    - name: Build and start CUPS container
      docker_compose:
        project_src: "{{ project_dir }}"
        build: yes
        state: present
      environment:
        DOCKER_HOST: unix:///var/run/docker.sock
      tags: [deploy]
    
    - name: Display access information
      debug:
        msg:
          - "Print Server deployed successfully!"
          - "Access the CUPS web interface at: http://{{ ansible_default_ipv4.address }}:631"
          - "Username: {{ cups_admin_user }}"
          - "Password: {{ cups_admin_password }}"
          - ""
          - "To manage the server:"
          - "  - Add printers through the web interface"
          - "  - Configure printer settings"
          - "  - Monitor print jobs"
      tags: [info]
